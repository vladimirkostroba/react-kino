{"version":3,"file":"static/js/53.9df516a0.chunk.js","mappings":"0MAKe,SAASA,EAAUC,GAAW,IAATC,EAAMD,EAANC,OAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,OACIC,EAAAA,EAAAA,KAAA,MAAAC,SACKJ,EAAOK,KAAI,SAAAC,GAAA,IAAEC,EAAKD,EAALC,MAAMC,EAAIF,EAAJE,KAAKC,EAAEH,EAAFG,GAAE,OACtBN,EAAAA,EAAAA,KAAA,MAAAC,UACGD,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,GAAE,iBAAAC,OAAmBH,GAAMI,MAAO,CAACC,KAAKb,GAAUG,SAAEG,GAAYC,KADhEC,EAEL,KAIrB,C,kHCKe,SAASM,IAAe,IAADC,EAElCC,GAAsCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAjCvB,EAAMyB,EAAA,GAAEC,EAASD,EAAA,GAClBE,EAAgC,QAA3BX,EAAGK,EAAYO,IAAI,gBAAQ,IAAAZ,EAAAA,EAAK,GAqB3C,OAGGa,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAA1B,SAAA,EACJyB,EAAAA,EAAAA,MAAA,QAAME,SAtBI,SAAAC,GAtBM,IAAYC,EAuB9BD,EAAEE,iBAvB4BD,EAyBRP,EAhBjBS,MAAM,mDAADvB,OAgBMe,EAhBwD,8CAR1D,CACZS,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,gOAKhBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAzC,GAAA,IAAE4C,EAAO5C,EAAP4C,QAAO,OAAMV,EAAQU,EAAQ,IACpCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GAgBxC,EAgBkCzC,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,SAEA6C,MAAOrB,EACRsB,SAAU,SAAAjB,GAAC,OAlBYxB,EAkBQwB,EAAEkB,OAAOF,WAhB1C1B,EAD4B,KAATd,EAAc,CAAC2C,MAAM3C,GAAQ,CAAC,GADzB,IAACA,CAkBuB,KAC9CL,EAAAA,EAAAA,KAAA,UAAQiD,KAAK,SAAQhD,SAAC,eAGvBD,EAAAA,EAAAA,KAACL,EAAAA,EAAU,CAACE,OAAQA,MAK3B,C","sources":["components/moviesList.js","pages/SearchMovies.js"],"sourcesContent":["import React from \"react\";\nimport { Link, useLocation} from \"react-router-dom\";\n\n\n\nexport default function MoviesList({movies}){\n    const location = useLocation();\n\n    return(\n        <ul>\n            {movies.map(({title,name,id}) => \n                (<li key={id}>\n                    <Link to={`/searchMovies/${id}`} state={{from:location}}>{title?title:name}</Link>\n                </li>)\n            )}\n        </ul>\n        )\n}","import React, { Fragment } from \"react\";\nimport { useState } from \"react\";\nimport MoviesList from \"components/moviesList\";\nimport { useSearchParams } from \"react-router-dom\";\n  \n  \n\n    const searchMoviesApi = (serchValue,getData) => {\n        const options = {\n            method: 'GET',\n            headers: {\n              accept: 'application/json',\n              Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMjMwYmJjZGE0MWM2OWYwYmZmZGE1ZDNkNjRlYmNkNSIsInN1YiI6IjY1MDdjM2QxNDJkOGE1MDExYmQ3NDAxNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Oxa75X3JVqtzgOHh5yPUmGQIUF4IZjqi2OkYakrysPk'\n            }\n          };\n\n        return fetch(`https://api.themoviedb.org/3/search/movie?query=${serchValue}&include_adult=false&language=en-US&page=1`, options)\n            .then(response => response.json())\n            .then(({results}) => getData(results))\n            .catch(err => console.error(err));\n    }\n\nexport default function SearchMovies(){\n\n    const [searchValue, setSearchValue] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const movie = searchValue.get(\"query\")  ?? ''; \n\n\n    const getMovies = e => {\n          e.preventDefault();\n\n          searchMoviesApi(movie,setMovies);\n\n          \n    }\n\n    const updateQueryString = (name) => {\n      const nextParams = name !== '' ? {query:name} : {};\n      setSearchValue(nextParams);\n    }\n    \n    // добавить функцию очистки параметра (вебинар 2 , 14 мин)\n\n\n    \n    \n    return(\n       \n\n       <Fragment>\n            <form onSubmit={getMovies}>\n         <input\n         \n         value={movie}\n        onChange={e=>updateQueryString(e.target.value)}/>\n        <button type='submit'>Search</button>\n       </form>\n\n       <MoviesList movies={movies}/>\n       </Fragment>\n\n\n    )\n}"],"names":["MoviesList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","title","name","id","Link","to","concat","state","from","SearchMovies","_searchValue$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchValue","setSearchValue","_useState","useState","_useState2","setMovies","movie","get","_jsxs","Fragment","onSubmit","e","getData","preventDefault","fetch","method","headers","accept","Authorization","then","response","json","results","catch","err","console","error","value","onChange","target","query","type"],"sourceRoot":""}